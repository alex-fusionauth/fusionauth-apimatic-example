/**
 * FusionAuth APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  bigint,
  boolean,
  dict,
  object,
  optional,
  Schema,
  string,
  unknown,
} from '../schema';
import { ContentStatusEnum, contentStatusEnumSchema } from './contentStatusEnum';

/** User registration information for a single application. */
export interface UserRegistration {
  data?: Record<string, unknown>;
  preferredLanguages?: string[];
  tokens?: Record<string, string>;
  applicationId?: string;
  authenticationToken?: string;
  cleanSpeakId?: string;
  id?: string;
  /** The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC. */
  insertInstant?: bigint;
  /** The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC. */
  lastLoginInstant?: bigint;
  /** The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC. */
  lastUpdateInstant?: bigint;
  roles?: unknown[];
  /** Timezone Identifier */
  timezone?: string;
  username?: string;
  /** Status for content like usernames, profile attributes, etc. */
  usernameStatus?: ContentStatusEnum;
  verified?: boolean;
  /** The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC. */
  verifiedInstant?: bigint;
}

export const userRegistrationSchema: Schema<UserRegistration> = object({
  data: ['data', optional(dict(unknown()))],
  preferredLanguages: ['preferredLanguages', optional(array(string()))],
  tokens: ['tokens', optional(dict(string()))],
  applicationId: ['applicationId', optional(string())],
  authenticationToken: ['authenticationToken', optional(string())],
  cleanSpeakId: ['cleanSpeakId', optional(string())],
  id: ['id', optional(string())],
  insertInstant: ['insertInstant', optional(bigint())],
  lastLoginInstant: ['lastLoginInstant', optional(bigint())],
  lastUpdateInstant: ['lastUpdateInstant', optional(bigint())],
  roles: ['roles', optional(array(unknown()))],
  timezone: ['timezone', optional(string())],
  username: ['username', optional(string())],
  usernameStatus: ['usernameStatus', optional(contentStatusEnumSchema)],
  verified: ['verified', optional(boolean())],
  verifiedInstant: ['verifiedInstant', optional(bigint())],
});
