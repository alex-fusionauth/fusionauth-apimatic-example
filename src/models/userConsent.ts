/**
 * FusionAuth APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  bigint,
  dict,
  lazy,
  object,
  optional,
  Schema,
  string,
  unknown,
} from '../schema';
import { Consent, consentSchema } from './consent';
import { ConsentStatusEnum, consentStatusEnumSchema } from './consentStatusEnum';

/** Models a User consent. */
export interface UserConsent {
  data?: Record<string, unknown>;
  /** Models a consent. */
  consent?: Consent;
  consentId?: string;
  giverUserId?: string;
  id?: string;
  /** The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC. */
  insertInstant?: bigint;
  /** The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC. */
  lastUpdateInstant?: bigint;
  /** Models a consent. */
  status?: ConsentStatusEnum;
  userId?: string;
  values?: string[];
}

export const userConsentSchema: Schema<UserConsent> = object({
  data: ['data', optional(dict(unknown()))],
  consent: ['consent', optional(lazy(() => consentSchema))],
  consentId: ['consentId', optional(string())],
  giverUserId: ['giverUserId', optional(string())],
  id: ['id', optional(string())],
  insertInstant: ['insertInstant', optional(bigint())],
  lastUpdateInstant: ['lastUpdateInstant', optional(bigint())],
  status: ['status', optional(consentStatusEnumSchema)],
  userId: ['userId', optional(string())],
  values: ['values', optional(array(string()))],
});
