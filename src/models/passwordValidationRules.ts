/**
 * FusionAuth APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { boolean, lazy, number, object, optional, Schema } from '../schema';
import {
  PasswordBreachDetection,
  passwordBreachDetectionSchema,
} from './passwordBreachDetection';
import {
  RememberPreviousPasswords,
  rememberPreviousPasswordsSchema,
} from './rememberPreviousPasswords';

export interface PasswordValidationRules {
  breachDetection?: PasswordBreachDetection;
  maxLength?: number;
  minLength?: number;
  rememberPreviousPasswords?: RememberPreviousPasswords;
  requireMixedCase?: boolean;
  requireNonAlpha?: boolean;
  requireNumber?: boolean;
  validateOnLogin?: boolean;
}

export const passwordValidationRulesSchema: Schema<PasswordValidationRules> = object(
  {
    breachDetection: [
      'breachDetection',
      optional(lazy(() => passwordBreachDetectionSchema)),
    ],
    maxLength: ['maxLength', optional(number())],
    minLength: ['minLength', optional(number())],
    rememberPreviousPasswords: [
      'rememberPreviousPasswords',
      optional(lazy(() => rememberPreviousPasswordsSchema)),
    ],
    requireMixedCase: ['requireMixedCase', optional(boolean())],
    requireNonAlpha: ['requireNonAlpha', optional(boolean())],
    requireNumber: ['requireNumber', optional(boolean())],
    validateOnLogin: ['validateOnLogin', optional(boolean())],
  }
);
