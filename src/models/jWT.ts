/**
 * FusionAuth APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  bigint,
  dict,
  object,
  optional,
  Schema,
  string,
  unknown,
} from '../schema';

/** JSON Web Token (JWT) as defined by RFC 7519.  <pre>  From RFC 7519 Section 1. Introduction:     The suggested pronunciation of JWT is the same as the English word "jot".  <pre>  The JWT is not Thread-Safe and should not be re-used. */
export interface JWT {
  aud?: unknown;
  /** The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC. */
  exp?: bigint;
  /** The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC. */
  iat?: bigint;
  iss?: string;
  /** The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC. */
  nbf?: bigint;
  otherClaims?: Record<string, unknown>;
  sub?: string;
  jti?: string;
}

export const jWTSchema: Schema<JWT> = object({
  aud: ['aud', optional(unknown())],
  exp: ['exp', optional(bigint())],
  iat: ['iat', optional(bigint())],
  iss: ['iss', optional(string())],
  nbf: ['nbf', optional(bigint())],
  otherClaims: ['otherClaims', optional(dict(unknown()))],
  sub: ['sub', optional(string())],
  jti: ['jti', optional(string())],
});
