/**
 * FusionAuth APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  bigint,
  boolean,
  lazy,
  object,
  optional,
  Schema,
  string,
  unknown,
} from '../schema';
import {
  TransactionTypeEnum,
  transactionTypeEnumSchema,
} from './transactionTypeEnum';
import { UserActionOption, userActionOptionSchema } from './userActionOption';

/** An action that can be executed on a user (discipline or reward potentially). */
export interface UserAction {
  active?: boolean;
  cancelEmailTemplateId?: string;
  endEmailTemplateId?: string;
  id?: string;
  includeEmailInEventJSON?: boolean;
  /** The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC. */
  insertInstant?: bigint;
  /** The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC. */
  lastUpdateInstant?: bigint;
  /** Models a set of localized Strings that can be stored as JSON. */
  localizedNames?: unknown;
  modifyEmailTemplateId?: string;
  name?: string;
  options?: UserActionOption[];
  preventLogin?: boolean;
  sendEndEvent?: boolean;
  startEmailTemplateId?: string;
  temporal?: boolean;
  /** The transaction types for Webhooks and other event systems within FusionAuth. */
  transactionType?: TransactionTypeEnum;
  userEmailingEnabled?: boolean;
  userNotificationsEnabled?: boolean;
}

export const userActionSchema: Schema<UserAction> = object({
  active: ['active', optional(boolean())],
  cancelEmailTemplateId: ['cancelEmailTemplateId', optional(string())],
  endEmailTemplateId: ['endEmailTemplateId', optional(string())],
  id: ['id', optional(string())],
  includeEmailInEventJSON: ['includeEmailInEventJSON', optional(boolean())],
  insertInstant: ['insertInstant', optional(bigint())],
  lastUpdateInstant: ['lastUpdateInstant', optional(bigint())],
  localizedNames: ['localizedNames', optional(unknown())],
  modifyEmailTemplateId: ['modifyEmailTemplateId', optional(string())],
  name: ['name', optional(string())],
  options: ['options', optional(array(lazy(() => userActionOptionSchema)))],
  preventLogin: ['preventLogin', optional(boolean())],
  sendEndEvent: ['sendEndEvent', optional(boolean())],
  startEmailTemplateId: ['startEmailTemplateId', optional(string())],
  temporal: ['temporal', optional(boolean())],
  transactionType: ['transactionType', optional(transactionTypeEnumSchema)],
  userEmailingEnabled: ['userEmailingEnabled', optional(boolean())],
  userNotificationsEnabled: ['userNotificationsEnabled', optional(boolean())],
});
