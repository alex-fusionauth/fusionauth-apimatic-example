/**
 * FusionAuth APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  bigint,
  boolean,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  BreachedPasswordStatusEnum,
  breachedPasswordStatusEnumSchema,
} from './breachedPasswordStatusEnum';
import {
  ChangePasswordReasonEnum,
  changePasswordReasonEnumSchema,
} from './changePasswordReasonEnum';
import { ContentStatusEnum, contentStatusEnumSchema } from './contentStatusEnum';

export interface SecureIdentity {
  /** The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC. */
  breachedPasswordLastCheckedInstant?: bigint;
  breachedPasswordStatus?: BreachedPasswordStatusEnum;
  connectorId?: string;
  encryptionScheme?: string;
  factor?: number;
  id?: string;
  /** The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC. */
  lastLoginInstant?: bigint;
  password?: string;
  passwordChangeReason?: ChangePasswordReasonEnum;
  passwordChangeRequired?: boolean;
  /** The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC. */
  passwordLastUpdateInstant?: bigint;
  salt?: string;
  uniqueUsername?: string;
  username?: string;
  /** Status for content like usernames, profile attributes, etc. */
  usernameStatus?: ContentStatusEnum;
  verified?: boolean;
  /** The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC. */
  verifiedInstant?: bigint;
}

export const secureIdentitySchema: Schema<SecureIdentity> = object({
  breachedPasswordLastCheckedInstant: [
    'breachedPasswordLastCheckedInstant',
    optional(bigint()),
  ],
  breachedPasswordStatus: [
    'breachedPasswordStatus',
    optional(breachedPasswordStatusEnumSchema),
  ],
  connectorId: ['connectorId', optional(string())],
  encryptionScheme: ['encryptionScheme', optional(string())],
  factor: ['factor', optional(number())],
  id: ['id', optional(string())],
  lastLoginInstant: ['lastLoginInstant', optional(bigint())],
  password: ['password', optional(string())],
  passwordChangeReason: [
    'passwordChangeReason',
    optional(changePasswordReasonEnumSchema),
  ],
  passwordChangeRequired: ['passwordChangeRequired', optional(boolean())],
  passwordLastUpdateInstant: ['passwordLastUpdateInstant', optional(bigint())],
  salt: ['salt', optional(string())],
  uniqueUsername: ['uniqueUsername', optional(string())],
  username: ['username', optional(string())],
  usernameStatus: ['usernameStatus', optional(contentStatusEnumSchema)],
  verified: ['verified', optional(boolean())],
  verifiedInstant: ['verifiedInstant', optional(bigint())],
});
