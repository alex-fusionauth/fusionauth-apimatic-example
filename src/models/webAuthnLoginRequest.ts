/**
 * FusionAuth APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { boolean, lazy, object, optional, Schema, string } from '../schema';
import { MetaData, metaDataSchema } from './metaData';
import {
  WebAuthnPublicKeyAuthenticationRequest,
  webAuthnPublicKeyAuthenticationRequestSchema,
} from './webAuthnPublicKeyAuthenticationRequest';

/** Request to complete the WebAuthn registration ceremony */
export interface WebAuthnLoginRequest {
  /** Request to authenticate with WebAuthn */
  credential?: WebAuthnPublicKeyAuthenticationRequest;
  origin?: string;
  rpId?: string;
  twoFactorTrustId?: string;
  applicationId?: string;
  ipAddress?: string;
  metaData?: MetaData;
  newDevice?: boolean;
  noJWT?: boolean;
}

export const webAuthnLoginRequestSchema: Schema<WebAuthnLoginRequest> = object({
  credential: [
    'credential',
    optional(lazy(() => webAuthnPublicKeyAuthenticationRequestSchema)),
  ],
  origin: ['origin', optional(string())],
  rpId: ['rpId', optional(string())],
  twoFactorTrustId: ['twoFactorTrustId', optional(string())],
  applicationId: ['applicationId', optional(string())],
  ipAddress: ['ipAddress', optional(string())],
  metaData: ['metaData', optional(lazy(() => metaDataSchema))],
  newDevice: ['newDevice', optional(boolean())],
  noJWT: ['noJWT', optional(boolean())],
});
