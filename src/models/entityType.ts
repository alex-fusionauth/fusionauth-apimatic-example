/**
 * FusionAuth APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  bigint,
  dict,
  lazy,
  object,
  optional,
  Schema,
  string,
  unknown,
} from '../schema';
import {
  EntityJWTConfiguration,
  entityJWTConfigurationSchema,
} from './entityJWTConfiguration';
import {
  EntityTypePermission,
  entityTypePermissionSchema,
} from './entityTypePermission';

/** Models an entity type that has a specific set of permissions. These are global objects and can be used across tenants. */
export interface EntityType {
  data?: Record<string, unknown>;
  id?: string;
  /** The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC. */
  insertInstant?: bigint;
  /** JWT Configuration for entities. */
  jwtConfiguration?: EntityJWTConfiguration;
  /** The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC. */
  lastUpdateInstant?: bigint;
  name?: string;
  permissions?: EntityTypePermission[];
}

export const entityTypeSchema: Schema<EntityType> = object({
  data: ['data', optional(dict(unknown()))],
  id: ['id', optional(string())],
  insertInstant: ['insertInstant', optional(bigint())],
  jwtConfiguration: [
    'jwtConfiguration',
    optional(lazy(() => entityJWTConfigurationSchema)),
  ],
  lastUpdateInstant: ['lastUpdateInstant', optional(bigint())],
  name: ['name', optional(string())],
  permissions: [
    'permissions',
    optional(array(lazy(() => entityTypePermissionSchema))),
  ],
});
