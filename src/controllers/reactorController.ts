/**
 * FusionAuth APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiError } from '@apimatic/core';
import { ApiResponse, RequestOptions } from '../core';
import { ErrorsError } from '../errors/errorsError';
import {
  ReactorMetricsResponse,
  reactorMetricsResponseSchema,
} from '../models/reactorMetricsResponse';
import { ReactorRequest, reactorRequestSchema } from '../models/reactorRequest';
import { optional } from '../schema';
import { BaseController } from './baseController';

export class ReactorController extends BaseController {
  /**
   * Retrieves the FusionAuth Reactor metrics.
   *
   * @return Response from the API call
   */
  async retrieveReactorMetrics(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ReactorMetricsResponse>> {
    const req = this.createRequest('GET', '/api/reactor/metrics');
    req.defaultToError(ApiError, 'Error');
    req.authenticate([{ apiKeyAuth: true }]);
    return req.callAsJson(reactorMetricsResponseSchema, requestOptions);
  }

  /**
   * Activates the FusionAuth Reactor using a license Id and optionally a license text (for air-gapped
   * deployments)
   *
   * @param body
   * @return Response from the API call
   */
  async activateReactor(
    body?: ReactorRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('POST', '/api/reactor');
    const mapped = req.prepareArgs({
      body: [body, optional(reactorRequestSchema)],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.defaultToError(ErrorsError, 'Error');
    req.authenticate([{ apiKeyAuth: true }]);
    return req.call(requestOptions);
  }
}
