/**
 * FusionAuth APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { ErrorsError } from '../errors/errorsError';
import { LoginResponse, loginResponseSchema } from '../models/loginResponse';
import {
  PasswordlessLoginRequest,
  passwordlessLoginRequestSchema,
} from '../models/passwordlessLoginRequest';
import {
  PasswordlessSendRequest,
  passwordlessSendRequestSchema,
} from '../models/passwordlessSendRequest';
import {
  PasswordlessStartRequest,
  passwordlessStartRequestSchema,
} from '../models/passwordlessStartRequest';
import {
  PasswordlessStartResponse,
  passwordlessStartResponseSchema,
} from '../models/passwordlessStartResponse';
import { optional } from '../schema';
import { BaseController } from './baseController';

export class PasswordlessController extends BaseController {
  /**
   * Complete a login request using a passwordless code
   *
   * @param body
   * @return Response from the API call
   */
  async passwordlessLogin(
    body?: PasswordlessLoginRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<LoginResponse>> {
    const req = this.createRequest('POST', '/api/passwordless/login');
    const mapped = req.prepareArgs({
      body: [body, optional(passwordlessLoginRequestSchema)],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.defaultToError(ErrorsError, 'Error');
    req.authenticate([{ apiKeyAuth: true }]);
    return req.callAsJson(loginResponseSchema, requestOptions);
  }

  /**
   * Send a passwordless authentication code in an email to complete login.
   *
   * @param body
   * @return Response from the API call
   */
  async sendPasswordlessCode(
    body?: PasswordlessSendRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('POST', '/api/passwordless/send');
    const mapped = req.prepareArgs({
      body: [body, optional(passwordlessSendRequestSchema)],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.defaultToError(ErrorsError, 'Error');
    req.authenticate([{ apiKeyAuth: true }]);
    return req.call(requestOptions);
  }

  /**
   * Start a passwordless login request by generating a passwordless code. This code can be sent to the
   * User using the Send Passwordless Code API or using a mechanism outside of FusionAuth. The
   * passwordless login is completed by using the Passwordless Login API with this code.
   *
   * @param body
   * @return Response from the API call
   */
  async startPasswordlessLogin(
    body?: PasswordlessStartRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<PasswordlessStartResponse>> {
    const req = this.createRequest('POST', '/api/passwordless/start');
    const mapped = req.prepareArgs({
      body: [body, optional(passwordlessStartRequestSchema)],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.defaultToError(ErrorsError, 'Error');
    req.authenticate([{ apiKeyAuth: true }]);
    return req.callAsJson(passwordlessStartResponseSchema, requestOptions);
  }
}
